version: 2.1

executors:
  go-builder-executor:
    docker:
      - image: circleci/golang:latest
  
commands:
  init:
    steps:
      - restore_cache:
          keys:
            - gomod-cache-{{ checksum "go.sum" }}
  execute:
    steps:
      - run:
          name: "Download modules"
          command: go mod download
      - run:
          name: "Run linter"
          command: |
            go get -u golang.org/x/lint/golint
            golint ./...
      - run:
          name: "Run gofmt"
          command: |
            gofmt -d -e .
      - run:
          name: "Run go vet"
          command: |
            go vet -v ./...
      - run:
          name: "Run tests"
          command: |
            go test -v ./...
  
  cleanup:
    steps:
      - save_cache:
          key: gomod-cache-{{ checksum "go.sum" }}
          paths:
            - /go/pkg/mod

workflows:
  main:
    jobs:
      - test:
          name: "Go latest"
          v: "latest"
          latest: true
      - test:
          name: "Go v1.13"
          v: "1.13"
  experiment-mod:
    jobs:
      - test-experiment-mod:
          name: "Go v1.12"
          v: "1.12"
      - test-experiment-mod:
          name: "Go v1.11"
          v: "1.11"
  older-versions:
    jobs:
      - test-older-versions:
          name: "Go v1.10"
          v: "1.10"
      - test-older-versions:
          name: "Go v1.9"
          v: "1.9"
      - test-older-versions:
          name: "Go v1.8"
          v: "1.8"

jobs:
  # Base test configuration for Go library tests Each distinct version should
  # inherit this base, and override (at least) the container image used.
  test: &test
    parameters:
      v:
        type: string
        default: "latest"
      latest:
        type: boolean
        default: false
    docker:
      - image: "circleci/golang:<< parameters.v >>"
    working_directory: /go/src/github.com/danvergara/newsapigo
    steps:
      - checkout
      - init
      - execute
      - cleanup
  test-experiment-mod:
    <<: *test
    environment:
      GO111MODULE: "on"
  test-older-versions:
    <<: *test
    steps:
      - checkout
      - run: go version
      - run: go get -t -v ./...
      - run: diff -u <(echo -n) <(gofmt -d .)
      - run: if [[ "$LATEST" = true ]]; then go vet -v .; fi
      - run: go test -v -race ./...
