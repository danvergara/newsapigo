name: Build and test newsapigo package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        goVer: [1.12, 1.13]
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set up Go ${{ matrix.goVer }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.goVer }}

      - name: Cache Go modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build -v .

      - name: Test
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go test -v ./...

      - name: Run linter
        run: |
          export PATH=${PATH}:`go env GOPATH`/bin
          go get -u golang.org/x/lint/golint
          golint ./...

      - name: Run gofmt
        run: gofmt -d -e .

      - name: Run go vet
        run: go vet -v ./...

      - name: Staticcheck
        run: |
          # add executables installed with go get to PATH
          # TODO: this will hopefully be fixed by
          # https://github.com/actions/setup-go/issues/14
          export PATH=${PATH}:`go env GOPATH`/bin
          go get -u honnef.co/go/tools/cmd/staticcheck
          staticcheck ./...
